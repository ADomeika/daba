{"version":3,"sources":["components/Footer.js","components/svgs/Bag.js","components/Header.js","components/products/Product.js","components/products/Products.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","Date","getUTCFullYear","href","Bag","version","id","xmlns","xmlnsXlink","viewBox","width","height","xmlSpace","style","fill","d","Header","useState","isOpen","setIsOpen","className","onClick","src","alt","Product","image","title","price","Products","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4QAaeA,G,WAXA,WACb,OACE,oCACE,yCAAgB,IAAIC,MAAOC,kBAC3B,sCACU,uBAAGC,KAAK,oBAAR,gBADV,MACwD,uBAAGA,KAAK,wBAAR,qB,aCiB/CC,MAtBf,WACE,OACE,yBACEC,QAAQ,MACRC,GAAG,SACHC,MAAM,6BACNC,WAAW,+BACXC,QAAQ,cACRC,MAAM,KACNC,OAAO,KACPC,SAAS,WACTC,MAAO,CAAEC,KAAM,SAEf,0BAAMC,EAAE,ueCsBCC,EAhCA,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,KAGnB,OACE,oCACE,yBAAKC,UAAU,cACb,6BACE,yBACEA,UAAS,wBAAmBF,EAAS,QAAU,IAC/CG,QAAS,kBAAMF,GAAWD,KAE1B,+BACA,+BACA,kCAIN,yBAAKE,UAAU,QACb,uBAAGjB,KAAK,IAAIiB,UAAU,aACpB,yBAAKE,IAAI,eAAeC,IAAI,YAAYH,UAAU,iBAGtD,uBAAGjB,KAAK,aAAaiB,UAAU,QAC7B,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,uC,YCjBKI,MAVf,YAA+C,IAA5BlB,EAA2B,EAA3BA,GAAImB,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACnC,OACE,uBAAGxB,KAAI,aAAQG,GAAMc,UAAU,WAC7B,yBAAKE,IAAKG,EAAOF,IAAI,wBAAwBH,UAAU,mBACvD,wBAAIA,UAAU,kBAAkBM,GAChC,uBAAGN,UAAU,kBAAb,cAAuCO,KCO9BC,MAXf,WACE,OACE,yBAAKR,UAAU,gBACb,kBAAC,EAAD,CAASd,GAAG,IAAIoB,MAAM,uBAAuBD,MAAM,gBAAgBE,MAAM,SACzE,kBAAC,EAAD,CAASrB,GAAG,IAAIoB,MAAM,uBAAuBD,MAAM,gBAAgBE,MAAM,SACzE,kBAAC,EAAD,CAASrB,GAAG,IAAIoB,MAAM,uBAAuBD,MAAM,gBAAgBE,MAAM,SACzE,kBAAC,EAAD,CAASrB,GAAG,IAAIoB,MAAM,uBAAuBD,MAAM,gBAAgBE,MAAM,WCKhEE,EATF,WACX,OACE,oCAEE,kBAAC,EAAD,QCYSC,MAhBf,WACE,OACE,yBAAKV,UAAU,cACb,4BAAQA,UAAU,UAChB,kBAAC,EAAD,OAEF,0BAAMA,UAAU,QACd,kBAAC,EAAD,OAEF,4BAAQA,UAAU,UAChB,kBAAC,EAAD,SCJYW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.920f16d5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return (\n    <>\n      <p>DABA &copy; {new Date().getUTCFullYear()}</p>\n      <p>\n        Tel Nr. <a href='tel:+37062643195'>+37062643195</a> | <a href='mailto:dalia@daba.lt'>dalia@daba.lt</a>\n      </p>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\n\nfunction Bag() {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 279 279\"\n      width='40'\n      height='40'\n      xmlSpace=\"preserve\"\n      style={{ fill: '#fff' }}\n    >\n      <path d=\"M262.421,270.339L246.466,72.896C246.151,69.001,242.898,66,238.99,66h-42.833v-9.495C196.157,25.348,171.143,0,139.985,0\n        h-0.99c-31.157,0-56.838,25.348-56.838,56.505V66H39.99c-3.908,0-7.161,3.001-7.476,6.896l-16,198\n        c-0.169,2.088,0.543,4.15,1.963,5.689S21.897,279,23.99,279h231c0.006,0,0.014,0,0.02,0c4.143,0,7.5-3.357,7.5-7.5\n        C262.51,271.105,262.48,270.717,262.421,270.339z M97.157,56.505C97.157,33.619,116.109,15,138.995,15h0.99\n        c22.886,0,41.172,18.619,41.172,41.505V66h-84V56.505z\" />\n    </svg>\n  )\n}\n\nexport default Bag\n","import React, { useState } from 'react';\nimport './Header.css';\n\nimport Bag from './svgs/Bag';\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <div className='mobile-nav'>\n        <nav>\n          <div\n            className={`icon hamburger${isOpen ? ' open' : ''}`}\n            onClick={() => setIsOpen(!isOpen)}\n          >\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </nav>\n      </div>\n      <div className='logo'>\n        <a href='/' className='logo-link'>\n          <img src='/logo192.png' alt='DABA logo' className='logo-image' />\n        </a>\n      </div>\n      <a href='/krepselis' className='cart'>\n        <Bag />\n        <div className='cart-quantity'>\n          <span>1</span>\n        </div>\n      </a>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Product.css';\n\nfunction Product({ id, image, title, price }) {\n  return (\n    <a href={`/p/${id}`} className='product'>\n      <img src={image} alt='hidrolatas - maumedis' className='product__image' />\n      <h2 className='product__title'>{title}</h2>\n      <p className='product__price'>Kaina: Â£{price}</p>\n    </a>\n  )\n}\n\nexport default Product\n","import React from 'react'\n\nimport Product from './Product'\n\nfunction Products() {\n  return (\n    <div className='product-list'>\n      <Product id='1' title='Maumedzio hidrolatas' image='/maumedis.png' price='6.99' />\n      <Product id='2' title='Maumedzio hidrolatas' image='/maumedis.png' price='6.99' />\n      <Product id='3' title='Maumedzio hidrolatas' image='/maumedis.png' price='6.99' />\n      <Product id='4' title='Maumedzio hidrolatas' image='/maumedis.png' price='6.99' />\n    </div>\n  )\n}\n\nexport default Products\n","import React from 'react';\nimport './Main.css'\n\n// import Home from './home/Home';\nimport Products from './products/Products';\n\nconst Main = () => {\n  return (\n    <>\n      {/* <Home /> */}\n      <Products />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className='background'>\n      <header className='header'>\n        <Header />\n      </header>\n      <main className='main'>\n        <Main />\n      </main>\n      <footer className='footer'>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}